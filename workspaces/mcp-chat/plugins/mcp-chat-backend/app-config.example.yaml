# MCP Chat Backend Configuration Example
# This file demonstrates how to configure the MCP Chat backend plugin

mcpChat:
  # Configure AI providers (at least one provider is required)
  # Supported Providers: OpenAI, Gemini, Claude, and Ollama
  # Currently only the first provider in the list is used
  providers:
    # OpenAI provider configuration
    - id: openai
      token: ${OPENAI_API_KEY}
      model: gpt-4o-mini # or gpt-4, gpt-3.5-turbo, etc.
    
    # Claude provider configuration
    - id: claude
      token: ${CLAUDE_API_KEY}
      model: claude-sonnet-4-20250514 # or claude-3-7-sonnet-latest
    
    # Gemini provider configuration
    - id: gemini
      token: ${GEMINI_API_KEY}
      model: gemini-2.5-flash # or gemini-2.0-pro, etc.
    
    # Ollama provider configuration (local deployment)
    - id: ollama
      baseUrl: 'http://localhost:11434'
      model: llama3.1:8b # or any model you have locally

  # Configure MCP (Model Context Protocol) servers
  # Multiple servers can be configured for different tools and capabilities
  mcpServers:
    # Example: Brave Search for web searching
    - id: brave-search-server
      name: Brave Search Server
      npxCommand: '@modelcontextprotocol/server-brave-search@latest'
      env:
        BRAVE_API_KEY: ${BRAVE_API_KEY}

    # Example: Kubernetes server for K8s operations
    - id: kubernetes-server
      name: Kubernetes Server
      npxCommand: 'kubernetes-mcp-server@latest'
      env:
        KUBECONFIG: ${KUBECONFIG}

    # Example: Backstage server integration
    - id: backstage-server
      name: Backstage Server
      url: 'http://localhost:7007/api/mcp-actions/v1'
      headers:
        Authorization: 'Bearer ${BACKSTAGE_MCP_TOKEN}'

  # Optional: Customize the system prompt for the AI assistant
  # If not specified, uses a default prompt optimized for tool usage
  systemPrompt: "You are a helpful assistant. When using tools, provide a clear, readable summary of the results rather than showing raw data. Focus on answering the user's question with the information gathered."

  # Optional: Configure quick prompts for the frontend
  # These are predefined prompts that users can quickly access
  quickPrompts:
    - title: 'Search Latest Tech News'
      description: 'Find the latest technology news and developments'
      prompt: 'Search for the latest developments in Model Context Protocol and its applications'
      category: Research

    - title: 'Kubernetes Health Check'
      description: 'Check the health of Kubernetes clusters'
      prompt: 'Show me the current Kubernetes deployments, pods status, and resource utilization in a nicely formatted text with bullet points'
      category: Infrastructure

    - title: 'Backstage Catalog Query'
      description: 'Query the Backstage software catalog'
      prompt: 'Describe the "example-app" microservice in our Backstage catalog'
      category: Catalog

